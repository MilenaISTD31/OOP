import os

class Example:
    def __init__(self, file_path):
        # self - это ссылка на сам объект, и он используется для доступа к атрибутам и методам объекта
        # file_path - это параметр, который мы передаем при создании объекта класса, и он должен содержать путь к файлу, с которым мы хотим работать.
        self.file_path = file_path # Эта строка сохраняет переданный file_path в атрибуте объекта file_path. Таким образом, мы можем использовать этот путь в других методах класса.
        
        # Проверка существования файла и его создание при необходимости
        if not os.path.exists(self.file_path):
           with open(self.file_path, 'w'): # # Создание файла, если он не существует
                pass # Этот блок кода проверяет, существует ли файл по указанному пути. Если файла нет, он создает пустой файл.
        self.words = [] # Здесь мы инициализируем атрибут words как пустой список. В этот список будут помещены все слова из текста файла, который мы будем обрабатывать.

        # Чтение слов из файла и сохранение их в атрибуте words
        with open(self.file_path, 'r') as file: #  Эта конструкция открывает файл в режиме чтения ('r') и связывает его с переменной file. with гарантирует, что файл будет корректно закрыт после выполнения блока кода.
            self.words = file.read().split() # Метод read() читает содержимое файла целиком, а split() разделяет текст на слова по пробелам и сохраняет их в список words

    def delete_word(self, word): # Определение метода delete_word, который будет удалять все вхождения слова word из списка words
        # Удаление слова из списка, если оно существует
        while word in self.words: # Цикл while продолжается до тех пор, пока слово word присутствует в списке words.
            self.words.remove(word) # Удаляет первое вхождение слова word из списка words.

    def update_source(self): # Определение метода update_source, который будет записывать обновленный список слов обратно в файл.
        # Сохранение всех слов обратно в файл
        with open(self.file_path, 'w') as file: # Открывает файл в режиме записи ('w'), что позволяет перезаписать его содержимое.
            file.write(' '.join(self.words)) # Объединяет слова из списка words в одну строку с пробелами между словами и записывает эту строку в файл.

# Проверка:
# 1. Пример использования класса
file_path = Example('example.txt')
file_path = Example(file_path)
print(f'Слова в файле: {file_path.words}')

# 2. Удаляем слово 'ООП'
file_path.delete_word('ООП')
print(f'Слова в файле после удаления: {file_path.words}')

# 3. Обновляем файл
file_path.update_source()
print('Файл обновлен')
